{"version":3,"sources":["components/Layout/Layout.module.scss","components/Menu/Menu.module.scss","serviceWorker.ts","components/Menu/Menu.tsx","components/Layout/Layout.tsx","state/config.action.ts","models/Trainer.model.ts","state/config.reducer.ts","containers/Settings/Settings.tsx","models/Letter.model.ts","components/TrainerLetter/TrainerLetter.tsx","containers/Trainer/Trainer.tsx","App.router.tsx","containers/App/App.tsx","index.tsx","components/TrainerLetter/TrainerLetter.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","Menu","title","useLocation","useState","isBack","setIsBack","useEffect","pathname","className","CSS","root","back","to","Layout","children","menu","content","ConfigActionTypes","TrainerTypes","ConfigUpdate","payload","type","initialState","LetterToMovement","speed","reducer","state","action","useConfigReducer","useReducer","Settings","config","dispatch","useCallback","MovementToLetter","PositionTypes","LetterPositionMap2","Left","Top","Right","Bottom","LetterNotFoundQueue","Center","getLetterQueue","value","console","warn","letterIndex","indexOf","CssPositionMap","TrainerLetter","word","letter","setLetter","setLetterIndex","position","setPosition","positionIndex","setPositionIndex","handleNextLetter","nextLetterIndex","length","nextLetter","toUpperCase","handleNextMovement","nextPositionIndex","queue","timer","setInterval","clearInterval","Array","from","map","item","index","classNames","wordLetter","isActive","key","area","letterBG","pointer","style","transition","Trainer","AppRouter","path","component","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6bb1f4ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__KuT-s\",\"menu\":\"Layout_menu__7RCvq\",\"content\":\"Layout_content__3nMgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3rsq6\",\"back\":\"Menu_back__3UrCW\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FiSettings, FiChevronLeft } from 'react-icons/fi';\nimport CSS from './Menu.module.scss';\n\nexport type MenuProps = {\n  title: string,\n}\n\nexport function Menu({ title }: MenuProps) {\n  const location = useLocation();\n  const [isBack, setIsBack] = useState(false);\n\n  useEffect(() => {\n    setIsBack(location.pathname !== '/');\n  }, [location]);\n\n  return (\n    <div className={`${CSS.root} d-flex ai-center fg-1`}>\n      <div className={`${CSS.back} fg-0`}>\n        {isBack && (\n          <Link to='/' className='button-icon'><FiChevronLeft/></Link>\n        )}\n      </div>\n\n      <div className='d-flex fg-1 jc-center'>{title}</div>\n      <div className='fg-0'>\n        <Link to='/settings' className='button-icon'>\n          <FiSettings />\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport CSS from './Layout.module.scss';\nimport { Menu } from '../Menu/Menu';\n\nexport function Layout({ children }) {\n  return (\n    <div className={CSS.root}>\n      <div className={CSS.menu}>\n        <Menu title='Eye Trainer' />\n      </div>\n      <div className={CSS.content}>{children}</div>\n    </div>\n  );\n}\n","import { TrainerConfig } from '../models/Trainer.model';\n\nexport enum ConfigActionTypes {\n  ConfigUpdate = 'ConfigUpdate',\n}\n\nexport class ConfigUpdate {\n  readonly type = ConfigActionTypes.ConfigUpdate;\n  constructor(public payload: Partial<TrainerConfig>) {}\n}\n\nexport type ConfigAction = ConfigUpdate;\n","\nexport enum TrainerTypes {\n  LetterToMovement = 'LetterToMovement',\n  MovementToLetter = 'MovementToLetter',\n}\n\nexport interface TrainerConfig {\n  type: TrainerTypes,\n  speed: number, // in ms\n}\n","import { useReducer } from 'react';\nimport { ConfigAction, ConfigActionTypes } from './config.action';\nimport { TrainerConfig, TrainerTypes } from '../models/Trainer.model';\n\nconst initialState: TrainerConfig = {\n  type: TrainerTypes.LetterToMovement,\n  speed: 2000,\n};\n\nfunction reducer(state: TrainerConfig, action: ConfigAction) {\n  switch (action.type) {\n    case ConfigActionTypes.ConfigUpdate:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function useConfigReducer() {\n  return useReducer(reducer, initialState);\n}\n","import React, { useCallback } from 'react';\nimport { useConfigReducer } from '../../state/config.reducer';\nimport { ConfigUpdate } from '../../state/config.action';\nimport { TrainerTypes } from '../../models/Trainer.model';\n\nexport function Settings() {\n  const [config, dispatch] = useConfigReducer();\n\n  const handleClick = useCallback(() => {\n    dispatch(new ConfigUpdate({\n      type: TrainerTypes.MovementToLetter,\n    }))\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div className='row'>type: {config.type}</div>\n      <div className='row'>speed: {config.speed} ms</div>\n    </div>\n  );\n}\n","export enum PositionTypes {\n  Left = 'Left',\n  Right = 'Right',\n  Top = 'Top',\n  Bottom = 'Bottom',\n  Center = 'Center',\n}\n\nexport const AlphaBet = 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЫЭЮЯ';\n\nexport const LetterPositionMap2: PositionTypes[][] = [\n  [ PositionTypes.Left, PositionTypes.Top, PositionTypes.Left ], // А\n  [ PositionTypes.Left, PositionTypes.Top, PositionTypes.Right ], // Б\n  [ PositionTypes.Left, PositionTypes.Bottom, PositionTypes.Left ], // В\n  [ PositionTypes.Left, PositionTypes.Bottom, PositionTypes.Right ], // Г\n  [ PositionTypes.Left, PositionTypes.Left, PositionTypes.Top ], // Д\n  [ PositionTypes.Left, PositionTypes.Left, PositionTypes.Bottom ], // Е\n  [ PositionTypes.Left, PositionTypes.Top, PositionTypes.Left, PositionTypes.Left ], // Ё\n  [ PositionTypes.Right, PositionTypes.Top, PositionTypes.Right ], // Ж\n  [ PositionTypes.Right, PositionTypes.Bottom, PositionTypes.Left ], // З\n  [ PositionTypes.Right, PositionTypes.Bottom, PositionTypes.Right ], // И\n  [ PositionTypes.Right, PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Right ], // Й\n  [ PositionTypes.Right, PositionTypes.Right, PositionTypes.Bottom ], // К\n  [ PositionTypes.Top, PositionTypes.Left, PositionTypes.Left ], // Л\n  [ PositionTypes.Top, PositionTypes.Left, PositionTypes.Top ], // М\n  [ PositionTypes.Top, PositionTypes.Left, PositionTypes.Bottom ], // Н\n  [ PositionTypes.Top, PositionTypes.Right, PositionTypes.Right ], // О\n  [ PositionTypes.Top, PositionTypes.Right, PositionTypes.Top ], // П\n  [ PositionTypes.Top, PositionTypes.Right, PositionTypes.Bottom ], // Р\n  [ PositionTypes.Bottom, PositionTypes.Left, PositionTypes.Left ], // С\n  [ PositionTypes.Bottom, PositionTypes.Left, PositionTypes.Top ], // Т\n  [ PositionTypes.Bottom, PositionTypes.Left, PositionTypes.Bottom ], // У\n  [ PositionTypes.Right, PositionTypes.Top, PositionTypes.Left ], // Ф\n  [ PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Top ], // Х\n  [ PositionTypes.Left, PositionTypes.Left, PositionTypes.Top, PositionTypes.Top ], // Ц\n  [ PositionTypes.Left, PositionTypes.Top, PositionTypes.Right, PositionTypes.Right ], // Ч\n  [ PositionTypes.Left, PositionTypes.Bottom, PositionTypes.Left, PositionTypes.Left ], // Ш\n  [ PositionTypes.Left, PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Right ], // Щ\n  [ PositionTypes.Left, PositionTypes.Left, PositionTypes.Bottom, PositionTypes.Bottom ], // Ы\n  [ PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Bottom ], // Э\n  [ PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Right ], // Ю\n  [ PositionTypes.Right, PositionTypes.Right, PositionTypes.Top ], // Я\n];\n\nexport const LetterNotFoundQueue = [ PositionTypes.Center ];\n\nexport function getLetterQueue(value: string): PositionTypes[] {\n  if (!value) {\n    console.warn('can\\'t get queue for no value', value);\n    return LetterNotFoundQueue;\n  }\n  const letterIndex = AlphaBet.indexOf(value);\n  if (letterIndex === -1) {\n    console.warn('queue for letter not found', value);\n    return LetterNotFoundQueue;\n  }\n  return LetterPositionMap2[letterIndex];\n}\n\nexport const LetterPositionMap = {};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport CSS from './TrainerLetter.module.scss';\nimport { getLetterQueue, LetterPositionMap, PositionTypes } from '../../models/Letter.model';\nimport { useConfigReducer } from '../../state/config.reducer';\nimport classNames from 'classnames';\n\nconst CssPositionMap = {\n  [PositionTypes.Left]: CSS.Left,\n  [PositionTypes.Right]: CSS.Right,\n  [PositionTypes.Top]: CSS.Top,\n  [PositionTypes.Bottom]: CSS.Bottom,\n  [PositionTypes.Center]: CSS.Center,\n};\n\nexport function TrainerLetter() {\n  const [ config ] = useConfigReducer();\n  const [ word, setWord ] = useState('Привет');\n\n  const [ letter, setLetter ] = useState(word[0]);\n  const [ letterIndex, setLetterIndex ] = useState(0);\n\n  const [ position, setPosition ] = useState(PositionTypes.Center);\n  const [ positionIndex, setPositionIndex ] = useState(-1);\n\n  const handleNextLetter = useCallback(() => {\n    const nextLetterIndex = (letterIndex + 1) % word.length;\n    const nextLetter = word[nextLetterIndex].toUpperCase();\n    setLetter(nextLetter);\n    setLetterIndex(nextLetterIndex);\n    // reset\n    setPositionIndex(0);\n    setPosition(getLetterQueue(nextLetter)[0]);\n  }, [ letterIndex, word ]);\n\n  const handleNextMovement = useCallback(() => {\n    const nextPositionIndex = positionIndex + 1;\n    const queue = getLetterQueue(letter);\n\n    if (nextPositionIndex >= queue.length) {\n      handleNextLetter();\n      return;\n    }\n\n    setPosition(queue[nextPositionIndex]);\n    setPositionIndex(nextPositionIndex);\n  }, [ positionIndex, letter, handleNextLetter ]);\n\n  useEffect(() => {\n    const timer = setInterval(handleNextMovement, config.speed);\n\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, [ handleNextMovement, config ]);\n\n  return (\n    <div className={CSS.root}>\n      <div className='row fg-0 text-center'>\n        {Array.from(word).map((item, index) => (\n          <div className={classNames(CSS.wordLetter, {\n            [CSS.isActive]: index === letterIndex,\n          })} key={index}>{item}</div>\n        ))}\n      </div>\n      <div className={`${CSS.area} row fg-1`}>\n        <div className={CSS.letterBG}>{letter}</div>\n        <div className={`${CSS.pointer} ${CssPositionMap[position]}`} style={{\n          transition: `all ${config.speed}ms`,\n        }} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useConfigReducer } from '../../state/config.reducer';\nimport { TrainerTypes } from '../../models/Trainer.model';\nimport { TrainerLetter } from '../../components/TrainerLetter/TrainerLetter';\n\nexport function Trainer() {\n  const [config] = useConfigReducer();\n\n  switch (config.type) {\n    case TrainerTypes.LetterToMovement:\n      return <TrainerLetter />\n    case TrainerTypes.MovementToLetter:\n      return <TrainerLetter/>;\n  }\n}\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport { Settings } from './containers/Settings/Settings';\nimport { Trainer } from './containers/Trainer/Trainer';\n\nexport function AppRouter() {\n  return (\n    <Switch>\n      <Route path='/settings' component={Settings} />\n      <Route path='*' component={Trainer} />\n    </Switch>\n  );\n}\n","import { Layout } from '../../components/Layout/Layout';\nimport { AppRouter } from '../../App.router';\nimport { BrowserRouter } from 'react-router-dom';\nimport React from 'react';\n\nexport function App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <AppRouter />\n      </Layout>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './containers/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TrainerLetter_root__12aq1\",\"area\":\"TrainerLetter_area__Xc9Lt\",\"wordLetter\":\"TrainerLetter_wordLetter__r3Gou\",\"isActive\":\"TrainerLetter_isActive__23P7j\",\"letterBG\":\"TrainerLetter_letterBG__1lTiz\",\"pointer\":\"TrainerLetter_pointer__1yilQ\",\"Center\":\"TrainerLetter_Center__1iP_k\",\"Left\":\"TrainerLetter_Left__3MigG\",\"Right\":\"TrainerLetter_Right__2-TkY\",\"Top\":\"TrainerLetter_Top__237ll\",\"Bottom\":\"TrainerLetter_Bottom__qOJZW\"};"],"sourceRoot":""}