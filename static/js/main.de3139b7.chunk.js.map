{"version":3,"sources":["components/TrainerWord/TrainerWord.module.scss","components/Layout/Layout.module.scss","components/Menu/Menu.module.scss","serviceWorker.ts","state/config.action.ts","components/Menu/Menu.tsx","components/Layout/Layout.tsx","models/Trainer.model.ts","state/config.selectors.ts","containers/Settings/Settings.tsx","models/Letter.model.ts","components/TrainerWord/TrainerWord.tsx","components/TrainerRandomLetter/TrainerRandomLetter.tsx","models/Keyboard.model.ts","components/TrainerMovement/TrainerMovement.tsx","containers/Trainer/Trainer.tsx","App.router.tsx","state/config.reducer.ts","state/store.ts","containers/App/App.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","ConfigActionTypes","Menu","title","useLocation","useState","isBack","setIsBack","useEffect","pathname","className","CSS","root","back","to","Layout","children","menu","content","TrainerTypes","ConfigUpdate","payload","dispatch","type","TrainerMetaMap","LetterToMovement","header","MovementToLetter","RandomLetter","selectConfigStore","state","config","Settings","useDispatch","useSelector","handleTypeSelect","useCallback","e","target","value","handleSpeedChange","speed","Number","Object","keys","map","item","meta","key","classNames","isActive","checked","onChange","disabled","min","max","step","PositionTypes","AlphaBet","LetterPositionMap2","Top","Bottom","Left","Right","Center","LetterErrorTick","letter","position","LetterPauseTick","getWordQueue","res","Array","from","forEach","index","letterQueue","console","warn","letterIndex","indexOf","toUpperCase","getLetterQueue","push","getRandomWordQueue","length","word","fill","Math","floor","random","join","CssPositionMap","TrainerWord","setWord","isEditing","setIsEditing","queue","setQueue","queueIndex","setQueueIndex","current","handleNextMovement","prev","timer","setInterval","clearInterval","handleEditEnter","handleEditExit","newWord","handleWordChange","onSubmit","onClick","wordLetter","editButton","area","letterBG","pointer","style","transition","TrainerRandomLetter","next","KeyMap","id","keyCode","symbol","TrainerMovement","letters","setLetters","setPosition","movements","setMovements","setTimer","handleNewPosition","clearTimeout","newTimer","setTimeout","handleNewMovement","newMovement","foundLetter","findIndex","positions","every","getLetter","newLetters","splice","handleKeyPress","found","find","handlePlaceholderClick","addEventListener","removeEventListener","placeholder","Trainer","AppRouter","path","component","initialState","reducers","action","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","ReduxThunk","App","log","process","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.de3139b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TrainerWord_root__3WR0y\",\"area\":\"TrainerWord_area__1Ex5n\",\"wordLetter\":\"TrainerWord_wordLetter__2yh6k\",\"isActive\":\"TrainerWord_isActive__1f9gM\",\"letterBG\":\"TrainerWord_letterBG__zPNw2\",\"pointer\":\"TrainerWord_pointer__cjyvQ\",\"placeholder\":\"TrainerWord_placeholder__1ZlpT\",\"Center\":\"TrainerWord_Center__14gs4\",\"Left\":\"TrainerWord_Left__1RctK\",\"Right\":\"TrainerWord_Right__2zumw\",\"Top\":\"TrainerWord_Top__3VwX1\",\"Bottom\":\"TrainerWord_Bottom__1F_Nm\",\"word\":\"TrainerWord_word__1AcTP\",\"editButton\":\"TrainerWord_editButton__rDSeK\",\"letters\":\"TrainerWord_letters__bvxxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__KuT-s\",\"menu\":\"Layout_menu__7RCvq\",\"content\":\"Layout_content__3nMgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3rsq6\",\"back\":\"Menu_back__3UrCW\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export enum ConfigActionTypes {\n  ConfigUpdate = 'ConfigUpdate',\n}\n\nexport const ConfigUpdate = (payload) => (dispatch) => dispatch({ type: ConfigActionTypes.ConfigUpdate, payload });\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FiSettings, FiChevronLeft } from 'react-icons/fi';\nimport CSS from './Menu.module.scss';\n\nexport type MenuProps = {\n  title: string,\n}\n\nexport function Menu({ title }: MenuProps) {\n  const location = useLocation();\n  const [isBack, setIsBack] = useState(false);\n\n  useEffect(() => {\n    setIsBack(location.pathname !== '/');\n  }, [location]);\n\n  return (\n    <div className={`${CSS.root} d-flex ai-center fg-1`}>\n      <div className={`${CSS.back} fg-0`}>\n        {isBack && (\n          <Link to='/' className='button-icon'><FiChevronLeft/></Link>\n        )}\n      </div>\n\n      <div className='d-flex fg-1 jc-center'>{title}</div>\n      <div className='fg-0'>\n        <Link to='/settings' className='button-icon'>\n          <FiSettings />\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport CSS from './Layout.module.scss';\nimport { Menu } from '../Menu/Menu';\n\nexport function Layout({ children }) {\n  return (\n    <div className={CSS.root}>\n      <div className={CSS.menu}>\n        <Menu title='Eye Trainer' />\n      </div>\n      <div className={CSS.content}>{children}</div>\n    </div>\n  );\n}\n","export enum TrainerTypes {\n  RandomLetter = 'RandomLetter',\n  LetterToMovement = 'LetterToMovement',\n  MovementToLetter = 'MovementToLetter',\n}\n\nexport interface TrainerConfig {\n  type: TrainerTypes,\n  speed: number, // in ms\n}\n\nexport const TrainerMetaMap = {\n  [TrainerTypes.LetterToMovement]: {\n    header: 'Текст → движения',\n  },\n  [TrainerTypes.MovementToLetter]: {\n    header: 'Движения → буквы',\n  },\n  [TrainerTypes.RandomLetter]: {\n    header: 'Случайные буквы',\n  },\n};\n","\nexport const selectConfigStore = (state) => state.config;\n","import React, { useCallback } from 'react';\nimport { ConfigUpdate } from '../../state/config.action';\nimport { TrainerMetaMap, TrainerTypes } from '../../models/Trainer.model';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectConfigStore } from '../../state/config.selectors';\n\nexport function Settings() {\n  const dispatch = useDispatch();\n  const config = useSelector(selectConfigStore);\n\n  const handleTypeSelect = useCallback((e) => {\n\n    dispatch(ConfigUpdate({\n      type: e.target.value,\n    }))\n  }, [dispatch]);\n\n  const handleSpeedChange = useCallback((e) => {\n    dispatch(ConfigUpdate({\n      speed: Number(e.target.value) * 1000,\n    }))\n  }, [dispatch]);\n\n  return (\n    <div>\n      {/* type */}\n      <div className='row'>\n        <div className='row fs-small'>Тип тренировки:</div>\n        <div className='row'>\n          {Object.keys(TrainerTypes).map((item) => {\n            const meta = TrainerMetaMap[item];\n            return (\n              <div key={item} className='row'>\n                <label className={classNames('d-flex ai-center pointer', {\n                  isActive: item === config.type,\n                })}>\n                  <input\n                    className='col-05 fg-0'\n                    checked={config.type === item}\n                    type='radio'\n                    value={item}\n                    onChange={handleTypeSelect}\n                    disabled={meta.disabled === true}\n                  />\n                  <div className='col-05 fg-1'>{meta.header}</div>\n                </label>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      {/* speed */}\n      <div className='row'>\n        <div className='row fs-small'>Скорость движения (сек)</div>\n        <div className='row'>\n          <input type='number' min='0' max='5' step='0.1' value={config.speed / 1000} onChange={handleSpeedChange} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","export enum PositionTypes {\n  Left = 'Left',\n  Right = 'Right',\n  Top = 'Top',\n  Bottom = 'Bottom',\n  Center = 'Center',\n}\n\nexport interface PositionTick {\n  letter: string;\n  index?: number; // of letter\n  position: PositionTypes;\n}\n\nexport const AlphaBet = 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЫЭЮЯ ';\n\nexport function wordParse(value: string): string {\n  if (!value) {\n    return '';\n  }\n\n  return Array.from(value).map((item) => {\n    const foundIndex = AlphaBet.indexOf(item.toUpperCase());\n    if (foundIndex === -1) {\n      return '_';\n    }\n    return item.toUpperCase();\n  }).join('');\n}\n\nexport const LetterPositionMap2: PositionTypes[][] = [\n  [ PositionTypes.Top, PositionTypes.Top, PositionTypes.Top ], // А\n  [ PositionTypes.Bottom, PositionTypes.Bottom, PositionTypes.Bottom ], // Б\n  [ PositionTypes.Left, PositionTypes.Bottom, PositionTypes.Left ], // В\n  [ PositionTypes.Left, PositionTypes.Bottom, PositionTypes.Right ], // Г\n  [ PositionTypes.Left, PositionTypes.Left, PositionTypes.Top ], // Д\n  [ PositionTypes.Left, PositionTypes.Left, PositionTypes.Bottom ], // Е\n  [ PositionTypes.Left, PositionTypes.Top, PositionTypes.Left, PositionTypes.Left ], // Ё\n  [ PositionTypes.Right, PositionTypes.Top, PositionTypes.Right ], // Ж\n  [ PositionTypes.Right, PositionTypes.Bottom, PositionTypes.Left ], // З\n  [ PositionTypes.Right, PositionTypes.Bottom, PositionTypes.Right ], // И\n  [ PositionTypes.Right, PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Right ], // Й\n  [ PositionTypes.Right, PositionTypes.Right, PositionTypes.Right ], // К\n  [ PositionTypes.Top, PositionTypes.Left, PositionTypes.Left ], // Л\n  [ PositionTypes.Top, PositionTypes.Left, PositionTypes.Top ], // М\n  [ PositionTypes.Left, PositionTypes.Left, PositionTypes.Left ], // Н\n  [ PositionTypes.Top, PositionTypes.Right, PositionTypes.Right ], // О\n  [ PositionTypes.Top, PositionTypes.Right, PositionTypes.Top ], // П\n  [ PositionTypes.Top, PositionTypes.Right, PositionTypes.Bottom ], // Р\n  [ PositionTypes.Bottom, PositionTypes.Left, PositionTypes.Left ], // С\n  [ PositionTypes.Bottom, PositionTypes.Left, PositionTypes.Top ], // Т\n  [ PositionTypes.Bottom, PositionTypes.Left, PositionTypes.Bottom ], // У\n  [ PositionTypes.Right, PositionTypes.Top, PositionTypes.Left ], // Ф\n  [ PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Top ], // Х\n  [ PositionTypes.Top, PositionTypes.Left, PositionTypes.Bottom ], // Ц\n  [ PositionTypes.Right, PositionTypes.Right, PositionTypes.Bottom ], // Ч\n  [ PositionTypes.Left, PositionTypes.Top, PositionTypes.Left ], // Ш\n  [ PositionTypes.Left, PositionTypes.Top, PositionTypes.Right ], // Щ\n  [ PositionTypes.Left, PositionTypes.Left, PositionTypes.Bottom, PositionTypes.Bottom ], // Ы\n  [ PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Bottom ], // Э\n  [ PositionTypes.Bottom, PositionTypes.Right, PositionTypes.Right ], // Ю\n  [ PositionTypes.Right, PositionTypes.Right, PositionTypes.Top ], // Я\n  [ PositionTypes.Center, PositionTypes.Center ] // space\n];\n\nexport function getLetterQueue(value: string): PositionTypes[] | null {\n  if (!value) {\n    console.warn('can\\'t get queue for no value', value);\n    return null;\n  }\n  const letterIndex = AlphaBet.indexOf(value.toUpperCase());\n  if (letterIndex === -1) {\n    console.warn('queue for letter not found', value);\n    return null;\n  }\n  return LetterPositionMap2[letterIndex];\n}\n\nexport const LetterErrorTick: PositionTick = {\n  letter: '?',\n  position: PositionTypes.Center,\n};\n\nexport const LetterPauseTick: PositionTick = {\n  letter: '',\n  position: PositionTypes.Center,\n};\n\nexport function getWordQueue(value: string): PositionTick[] {\n  if (!value) {\n    return [ LetterErrorTick ];\n  }\n  const res = [ LetterPauseTick ];\n\n  Array.from(value).forEach((letter: string, index) => {\n    const letterQueue = getLetterQueue(letter);\n    if (!letterQueue) {\n      res.push({\n        position: PositionTypes.Center,\n        letter: '?',\n        index,\n      });\n      // just long pause\n      res.push({\n        position: PositionTypes.Center,\n        letter: '?',\n        index,\n      });\n      return;\n    }\n    letterQueue.forEach((position) => {\n      res.push({\n        letter,\n        position,\n        index,\n      });\n      res.push({\n        letter,\n        position: PositionTypes.Center,\n        index,\n      });\n    });\n  });\n  res.push(LetterPauseTick);\n  return res;\n}\n\nexport function getRandomWordQueue(length: number = 20) {\n  const word = Array(length).fill(1).map(() => {\n    const index = Math.floor(Math.random() * AlphaBet.length);\n    return AlphaBet[index];\n  }).join('');\n  return getWordQueue(word);\n}\n\nexport function getLetter(queue: PositionTypes[]): null | string {\n  if (queue.length < 3 || queue.length > 4) {\n    return null;\n  }\n\n  const letterIndex = LetterPositionMap2.findIndex((positions) => {\n    return positions.every((item, index) => {\n      return item === queue[index];\n    })\n  })\n  if (letterIndex === -1) {\n    return null;\n  }\n\n  return AlphaBet[letterIndex];\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport CSS from './TrainerWord.module.scss';\nimport { getWordQueue, PositionTypes, wordParse } from '../../models/Letter.model';\nimport classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { selectConfigStore } from '../../state/config.selectors';\nimport { FiCheck, FiEdit } from 'react-icons/fi';\n\nexport const CssPositionMap = {\n  [PositionTypes.Left]: CSS.Left,\n  [PositionTypes.Right]: CSS.Right,\n  [PositionTypes.Top]: CSS.Top,\n  [PositionTypes.Bottom]: CSS.Bottom,\n  [PositionTypes.Center]: CSS.Center,\n};\n\nexport function TrainerWord() {\n  const config = useSelector(selectConfigStore);\n  const [ word, setWord ] = useState('ПРИВЕТ');\n  const [ isEditing, setIsEditing ] = useState(false);\n\n  const [ queue, setQueue ] = useState(() => getWordQueue(word));\n  const [ queueIndex, setQueueIndex ] = useState(0);\n\n  const current = queue[queueIndex];\n\n  const handleNextMovement = useCallback(() => {\n    setQueueIndex((prev) => (prev + 1) % queue.length);\n  }, [ queue ]);\n\n  useEffect(() => {\n    const timer = setInterval(handleNextMovement, config.speed);\n\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, [ handleNextMovement, config ]);\n\n  const handleEditEnter = useCallback(() => {\n    setIsEditing(true);\n  }, []);\n\n  const handleEditExit = useCallback(() => {\n    const newWord = wordParse(word);\n    setIsEditing(false);\n    setQueue(getWordQueue(newWord));\n    setWord(newWord);\n    setQueueIndex(0);\n  }, [ word ]);\n\n  const handleWordChange = useCallback((e) => {\n    setWord(e.target.value);\n  }, []);\n\n  return (\n    <div className={CSS.root}>\n      {!isEditing\n        ? [\n          <div key='word' className={`${CSS.word} row fg-0 pointer`} onClick={handleEditEnter}>\n            <div className='col text-center'>\n              {Array.from(word).map((item, index) => (\n                <div className={classNames(CSS.wordLetter, {\n                  [CSS.isActive]: index === current.index,\n                })} key={index}>{item}</div>\n              ))}\n            </div>\n            <div className={`${CSS.editButton} col button-icon small`}>\n              <FiEdit />\n            </div>\n          </div>,\n          <div key='area' className={`${CSS.area} row fg-1`}>\n            <div className={CSS.letterBG}>{current.letter}</div>\n            <div className={`${CSS.pointer} ${CssPositionMap[current.position]}`} style={{\n              transition: `all ${config.speed}ms`,\n            }} />\n          </div>,\n        ]\n        : (\n          <div className='row fg-0 text-center'>\n            <form onSubmit={handleEditExit}>\n              <input\n                className='col fs-small'\n                type='text'\n                value={word}\n                onChange={handleWordChange}\n              />\n              <div className='col button-icon small' onClick={handleEditExit}>\n                <FiCheck />\n              </div>\n            </form>\n          </div>\n        )\n      }\n\n    </div>\n  );\n}\n","import CSS from '../TrainerWord/TrainerWord.module.scss';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getRandomWordQueue } from '../../models/Letter.model';\nimport { CssPositionMap } from '../TrainerWord/TrainerWord';\nimport { useSelector } from 'react-redux';\nimport { selectConfigStore } from '../../state/config.selectors';\n\nexport function TrainerRandomLetter() {\n  const config = useSelector(selectConfigStore);\n  const [ queue, setQueue ] = useState(() => getRandomWordQueue());\n  const [queueIndex, setQueueIndex] = useState(0);\n\n  const current = queue[queueIndex];\n\n  const handleNextMovement = useCallback(() => {\n    const next = queueIndex + 1;\n    if (next >= queue.length) {\n      setQueue(getRandomWordQueue());\n      setQueueIndex(0);\n      return;\n    }\n    setQueueIndex(next);\n  }, [queueIndex, queue.length]);\n\n  useEffect(() => {\n    const timer = setInterval(handleNextMovement, config.speed);\n\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, [ handleNextMovement, config ]);\n\n  return (\n    <div className={CSS.root}>\n      <div className={`${CSS.area} row fg-1`}>\n        <div className={CSS.letterBG}>{current.letter}</div>\n        <div className={`${CSS.pointer} ${CssPositionMap[current.position]}`} style={{\n          transition: `all ${config.speed}ms`,\n        }} />\n      </div>\n    </div>\n  );\n}\n","import { PositionTypes } from './Letter.model';\n\nexport const KEY_CODE_ESC = 27;\n\nexport interface Key {\n  id: string;\n  keyCode: number;\n  symbol: string;\n  position: PositionTypes;\n}\n\nexport const KeyMap: Key[] = [\n  {\n    id: 'Left',\n    keyCode: 37,\n    symbol: '←',\n    position: PositionTypes.Left,\n  },\n  {\n    id: 'Up',\n    keyCode: 38,\n    symbol: '↑',\n    position: PositionTypes.Top,\n  },\n  {\n    id: 'Right',\n    keyCode: 39,\n    symbol: '→',\n    position: PositionTypes.Right,\n  },\n  {\n    id: 'Bottom',\n    keyCode: 40,\n    symbol: '↓',\n    position: PositionTypes.Bottom,\n  },\n];\n","import React, { useCallback, useEffect, useState } from 'react';\nimport CSS from '../TrainerWord/TrainerWord.module.scss';\nimport { CssPositionMap } from '../TrainerWord/TrainerWord';\nimport { getLetter, PositionTypes } from '../../models/Letter.model';\nimport { useSelector } from 'react-redux';\nimport { selectConfigStore } from '../../state/config.selectors';\nimport { Key, KEY_CODE_ESC, KeyMap } from '../../models/Keyboard.model';\n\nexport function TrainerMovement() {\n  const config = useSelector(selectConfigStore);\n  const [ letters, setLetters ] = useState<string[]>([]);\n  const [ position, setPosition ] = useState(PositionTypes.Center);\n  const [ movements, setMovements ] = useState<Key[]>([]);\n  const [ timer, setTimer ] = useState<any>(null);\n\n  const handleNewPosition = useCallback((value: PositionTypes) => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    setPosition(value);\n    const newTimer = setTimeout(() => setPosition(PositionTypes.Center), config.speed / 2);\n    setTimer(newTimer);\n  }, [ timer, config.speed ]);\n\n  const handleNewMovement = useCallback((value: Key) => {\n    const newMovement = [\n      ...movements,\n      value,\n    ];\n    handleNewPosition(value.position);\n    const queue = newMovement.map((item) => item.position) as PositionTypes[];\n    const foundLetter = getLetter(queue);\n    if (foundLetter) {\n      const newLetters = letters.length > 15\n        ? [ '...', ...letters.splice(-5), foundLetter ]\n        : [ ...letters, foundLetter ];\n      setLetters(newLetters);\n      setMovements([]);\n    } else if (newMovement.length > 3) {\n      setMovements([]);\n    } else {\n      setMovements(newMovement);\n    }\n  }, [ letters, movements ]);\n\n  const handleKeyPress = useCallback((e) => {\n    if (e.keyCode === KEY_CODE_ESC) {\n      // reset\n      if (movements.length > 0) {\n        setMovements([]);\n      } else {\n        setLetters([]);\n      }\n      return;\n    }\n    const found = KeyMap.find((item) => item.keyCode === e.keyCode);\n    if (!found) {\n      return;\n    }\n    handleNewMovement(found);\n  }, [ movements, handleNewMovement ]);\n\n  const handlePlaceholderClick = useCallback((value: PositionTypes) => {\n    handleNewMovement(KeyMap.find((item) => item.position === value) as Key);\n  }, [ handleNewMovement ]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [ handleKeyPress ]);\n\n  return (\n    <div className={CSS.root}>\n      <div className={`${CSS.letters} row fg-0 d-flex ai-center`}>\n        {letters.length === 0 && movements.length === 0 && (\n          <div className='color-gray fs-small'>Начните движения</div>\n        )}\n        {letters.map((item, index) => (\n          <div key={`${item}-${index}`}>{item}</div>\n        ))}\n        {movements.map((item, index) => (\n          <div className='color-blue fs-big' key={`${item.id}-${index}`}>{item.symbol}</div>\n        ))}\n      </div>\n      <div className={`${CSS.area} row fg-1`}>\n        <div\n          className={`${CSS.placeholder} \n          ${CssPositionMap[PositionTypes.Top]}`}\n          onClick={() => handlePlaceholderClick(PositionTypes.Top)}\n        />\n        <div\n          className={`${CSS.placeholder} \n          ${CssPositionMap[PositionTypes.Left]}`}\n          onClick={() => handlePlaceholderClick(PositionTypes.Left)}\n        />\n        <div\n          className={`${CSS.placeholder} \n          ${CssPositionMap[PositionTypes.Right]}`}\n          onClick={() => handlePlaceholderClick(PositionTypes.Right)}\n        />\n        <div\n          className={`${CSS.placeholder} \n          ${CssPositionMap[PositionTypes.Bottom]}`}\n          onClick={() => handlePlaceholderClick(PositionTypes.Bottom)}\n        />\n        <div\n          className={`${CSS.pointer} \n          ${CssPositionMap[position]}`}\n          style={{\n            transition: `all ${config.speed / 2}ms`,\n          }} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { TrainerTypes } from '../../models/Trainer.model';\nimport { TrainerWord } from '../../components/TrainerWord/TrainerWord';\nimport { TrainerRandomLetter } from '../../components/TrainerRandomLetter/TrainerRandomLetter';\nimport { useSelector } from 'react-redux';\nimport { selectConfigStore } from '../../state/config.selectors';\nimport { TrainerMovement } from '../../components/TrainerMovement/TrainerMovement';\n\nexport function Trainer() {\n  const config = useSelector(selectConfigStore);\n\n  switch (config.type) {\n    case TrainerTypes.LetterToMovement:\n      return <TrainerWord />\n    case TrainerTypes.MovementToLetter:\n      return <TrainerMovement />;\n    case TrainerTypes.RandomLetter:\n      return <TrainerRandomLetter />;\n    default:\n      return <TrainerWord/>;\n  }\n}\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport { Settings } from './containers/Settings/Settings';\nimport { Trainer } from './containers/Trainer/Trainer';\n\nexport function AppRouter() {\n  return (\n    <Switch>\n      <Route path='/settings' component={Settings} />\n      <Route path='*' component={Trainer} />\n    </Switch>\n  );\n}\n","import { ConfigActionTypes } from './config.action';\nimport { TrainerConfig, TrainerTypes } from '../models/Trainer.model';\n\nconst initialState: TrainerConfig = {\n  type: TrainerTypes.MovementToLetter,\n  speed: 600,\n};\n\nexport function configReducer(state: TrainerConfig = initialState, action) {\n  switch (action.type) {\n    case ConfigActionTypes.ConfigUpdate:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport ReduxThunk from 'redux-thunk';\nimport { configReducer } from './config.reducer';\n\nconst reducers = {\n  config: configReducer,\n};\n\nexport const store = createStore(\n  combineReducers(reducers),\n  composeWithDevTools(applyMiddleware(ReduxThunk)),\n);\n","import { Layout } from '../../components/Layout/Layout';\nimport { AppRouter } from '../../App.router';\nimport { MemoryRouter } from 'react-router-dom';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from '../../state/store';\n\nexport function App() {\n  return (\n    <Provider store={store}>\n      <MemoryRouter>\n        <Layout>\n          <AppRouter />\n        </Layout>\n      </MemoryRouter>\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './containers/App/App';\n\nconsole.log('LD26 Eye trainer version:', process.env.REACT_APP_VERSION || 'local');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}